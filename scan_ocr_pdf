#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

This script prompts, scans, OCRs then combines pages into a pdf

OPTIONS:
   -h      Show this message
   -d      Destination directory
   -r      Resolution to use while scanning,
           (can cause cuneiform to buffer overflow when set too high)
   -u      Use this device for scanning, instead of the first scanner listed
           See   $ scanimage -L    for your devices
   -g      Interface mode, prompts use zenity
   -s      Options to pass to scanimage. Default is:
           "--mode 'Color'  -l 0 -t 0 -x 210 -y 297" (colour A4 area)
EOF
}


TMP_FOLDER=`mktemp -d`
SCANNING_RES=250
DESTINATION="$HOME/Documents"
IMAGING_DEVICE=
SCANIMAGE_OPTIONS=
GUI=1

while getopts “h:d:r:u:g:s” OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         d)
             DESTINATION=$OPTARG
             ;;
         r)
             SCANNING_RES=$OPTARG
             ;;
         u)
             IMAGING_DEVICE=$OPTARG
             ;;
         g)
             GUI=0
             ;;
         s)
         	 SCANIMAGE_OPTIONS=$OPTARG
         	 ;;
         ?)
             usage
             exit
             ;;
     esac
done

# take the first scanner
if [ -z $IMAGING_DEVICE ]; then
	DEVICES=`scanimage -f "%d"`
	if [ ! -z "$DEVICES" ];then
		IMAGING_DEVICE=`echo $DEVICES | sed -e "s/\(.*\)\n/\1/"`
	else
		DEVICE_ERROR="xsane was unable to locate any scanning devices."
		if [ $GUI -eq 0 ]; then
			zenity --error --text="$DEVICE_ERROR"
		else
			echo "$DEVICE_ERROR"
		fi
		exit 1
	fi	
fi

DATE_STAMP=`date +'%s'`
INSTALL_ERROR=



# check for the neccessary packages
if [ ! `which 'a2ps'` ];then
	INSTALL_ERROR="$INSTALL_ERROR\nPlease install a2ps"
fi

if [ ! `which 'convert'` ];then
	INSTALL_ERROR="$INSTALL_ERROR\nPlease install imagemagick"
fi

if [ ! `which 'scanimage'` ];then
	INSTALL_ERROR="$INSTALL_ERROR\nPlease install xsane"
fi

if [ ! `which 'cuneiform'` ];then
	INSTALL_ERROR="$INSTALL_ERROR\nPlease install cuneiform-core"
fi

if [ ! `which 'gs'` ];then
	INSTALL_ERROR="$INSTALL_ERROR\nPlease install ghostscript"
fi

# offer some install advice
if [ ! -z $INSTALL_ERROR ]
then
	INSTALL_ERROR="$INSTALL_ERROR\n\nTo install all dependancies use (as root): aptitude install imagemagick xsane ghsotscript cuneiform a2ps"
	if [ $GUI -eq 0 ]; then
		zenity --error --text="$INSTALL_ERROR"
	else
		echo "$INSTALL_ERROR"
	fi
	exit 1
fi


mkdir -p $TMP_FOLDER
mkdir -p $DESTINATION
for i in $(seq --format=%003.f 1 150); do

	# a more appropriate quit button first time
	CANCEL_TEXT="Make PDF & Quit"
	if [[ $i == "001" ]]; then
		CANCEL_TEXT="Quit"
	fi

	KEY_INPUT=""	
	# wait for user
	if [ $GUI -eq 0 ];then
		zenity --question --cancel-label="$CANCEL_TEXT" --ok-label="Scan" --text="Prepare page $i and press Scan."
		if [ $? -gt 0 ];then
			KEY_INPUT="q"
		fi
	else
		echo "Prepare page $i and press Enter (q to stop scanning)"
		read KEY_INPUT
	fi

  # check for quit command
  if [[ "$KEY_INPUT" == "q" || "$KEY_INPUT" == "Q" ]];then
  	break
  fi

  # scan image
  scanimage --device $IMAGING_DEVICE --resolution $SCANNING_RES --mode 'Color'  -l 0 -t 0 -x 210 -y 297       $SCANIMAGE_OPTIONS          --format=pnm >"$TMP_FOLDER/$DATE_STAMP-$i.pnm"
  
  # check for scan failure, error and quit
  if [ ! $? && ! -s "$TMP_FOLDER/$DATE_STAMP-$i.pnm" ];then
  	echo "xSane scanning failed: quiting"
  	exit 1
  fi

  # cuneiform can only work with bitmaps
  convert "$TMP_FOLDER/$DATE_STAMP-$i.pnm" "$TMP_FOLDER/$DATE_STAMP-$i.bmp"
  rm "$TMP_FOLDER/$DATE_STAMP-$i.pnm"
  
  cuneiform "$TMP_FOLDER/$DATE_STAMP-$i.bmp" -o "$TMP_FOLDER/$DATE_STAMP-$i.txt"
  
  if [ !$? && ! -s "$TMP_FOLDER/$DATE_STAMP-$i.txt" ];then
  	echo "Cuneiform Failed: quiting"
  	exit 1
  fi
  
  # store the page and COR output
  a2ps "$TMP_FOLDER/$DATE_STAMP-$i.txt" -o "$TMP_FOLDER/$DATE_STAMP-text-$i.ps"
  rm "$TMP_FOLDER/$DATE_STAMP-$i.txt"
  convert -page A4+0+0 "$TMP_FOLDER/$DATE_STAMP-$i.bmp" "$TMP_FOLDER/$DATE_STAMP-page-$i.ps"
  rm "$TMP_FOLDER/$DATE_STAMP-$i.bmp"
done

# collect all of the files into one final pdf
if [ ! -z `ls $TMP_FOLDER/` ];then
	cat $TMP_FOLDER/$DATE_STAMP-text-*.ps > "$TMP_FOLDER/$DATE_STAMP-text.ps"
	OUTPUT_FILE=`date +'%d %B %Y - %R:%S'`
	INPUT_FILES=`ls $TMP_FOLDER/$DATE_STAMP-page-*.ps`
	INPUT_FILES=`echo "$INPUT_FILES" | sed 's|\n| |'`

   # ghostscript
	gs -dNOPAUSE -sDEVICE=pdfwrite -dBATCH -sOutputFile="$DESTINATION/$OUTPUT_FILE.pdf" $INPUT_FILES "$TMP_FOLDER/$DATE_STAMP-text.ps"
	rm -f $INPUT_FILES "$TMP_FOLDER/$DATE_STAMP-text.ps"
	rm -f $TMP_FOLDER/$DATE_STAMP-text-*.ps
fi

# turn off the device
scanimage --device $IMAGING_DEVICE -n --lamp-off